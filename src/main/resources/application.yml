spring:
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
    gateway:
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}
          predicates:
            - Path=/books/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/catalog-fallback
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
      httpclient:
        connect-timeout: 5000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      default-filters:
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenish-rate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_URL}/realms/PolarBookshop
      client:
        registration:
          keycloak:
            client-id: edge-service
            client-secret: polar-keycloak-secret
            scope: openid
        provider:
          keycloak:
            user-name-attribute: preferred_username
            issuer-uri: ${KEYCLOAK_URL}/realms/PolarBookshop
            authorization-uri: ${KEYCLOAK_EXTERNAL_URL}/realms/PolarBookshop/protocol/openid-connect/auth

  profiles:
    active: prod
  session:
    timeout: 10m
    redis:
      namespace: polar-edge
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 500ms

server:
  port: 9000
  netty:
    connection-timeout: 2s
  shutdown: graceful

logging:
  level:
    org:
      springframework:
        security:
          oauth2: TRACE
        web:
          reactive:
            function:
              client: TRACE

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 20
        permitted-number-of-calls-in-half-open-state: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 15000
  timelimiter:
    configs:
      default:
        timeout-duration: 5s

management:
  endpoints:
    web:
      exposure:
        include: refresh
